[{"C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\index.js":"1","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\App.js":"2","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\styles\\global.js":"3","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\context\\theme.jsx":"4","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\components\\CountryCard\\index.jsx":"5","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\pages\\Dashboard.jsx":"6","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\components\\Header\\index.jsx":"7","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\components\\Header\\styles.js":"8","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\styles\\dashboard.js":"9","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\components\\CountryCard\\styles.js":"10"},{"size":205,"mtime":1630769789195,"results":"11","hashOfConfig":"12"},{"size":501,"mtime":1630775745288,"results":"13","hashOfConfig":"12"},{"size":1207,"mtime":1630882063887,"results":"14","hashOfConfig":"12"},{"size":886,"mtime":1630772265468,"results":"15","hashOfConfig":"12"},{"size":754,"mtime":1630881828091,"results":"16","hashOfConfig":"12"},{"size":2507,"mtime":1630882494513,"results":"17","hashOfConfig":"12"},{"size":1905,"mtime":1630877767203,"results":"18","hashOfConfig":"12"},{"size":1064,"mtime":1630798890751,"results":"19","hashOfConfig":"12"},{"size":437,"mtime":1630883300730,"results":"20","hashOfConfig":"12"},{"size":796,"mtime":1630882623036,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"11arx66",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\index.js",[],[],"C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\App.js",[],"C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\styles\\global.js",[],"C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\context\\theme.jsx",["46"],"import React, { createContext, useEffect, useState } from 'react'\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst themes = [\r\n  {\r\n    name: 'dark',\r\n    colors: {\r\n      background: 'rgb(27,27,29)',\r\n      backgroundCard: 'rgb(38,43,48)',\r\n      color: 'white'\r\n    }\r\n  },\r\n  {\r\n    name: 'light',\r\n    colors: {\r\n      background: 'rgb(236,233,233)',\r\n      backgroundCard: 'rgb(248,247,247)',\r\n      color: 'black'\r\n    }\r\n  }\r\n]\r\n\r\nconst ThemeProvider = ({ children }) => {\r\n  const [theme, setTheme] = useState(themes[0])\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('@theme') === 'dark') setTheme(themes[0])\r\n    else if (localStorage.getItem('@theme') === 'light') setTheme(themes[1])\r\n  })\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, setTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeProvider, themes }\r\n","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\components\\CountryCard\\index.jsx",[],"C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\pages\\Dashboard.jsx",["47","48","49"],"import React, { useContext, useState, useEffect } from 'react'\r\n\r\nimport CountryCard from '../components/CountryCard'\r\nimport HeaderHome from '../components/Header'\r\nimport { ThemeContext } from '../context/theme'\r\n\r\nimport { Cards, InputContainer, Input } from '../styles/dashboard'\r\n\r\nconst DashBoardHome = () => {\r\n  const { theme } = useContext(ThemeContext)\r\n  document.body.style.backgroundColor = theme.colors.background\r\n\r\n  const [countryData, setCountryData] = useState([])\r\n  const [countries, setCountries] = useState()\r\n  let countryCounter = 9\r\n  let data = ''\r\n\r\n  useEffect(async () => {\r\n    setCountries(\r\n      await (await fetch('https://api.covid19api.com/summary')).json()\r\n    )\r\n    data = await (await fetch('https://api.covid19api.com/summary')).json()\r\n    const firstNineCountries = data.Countries.filter((item, index) => {\r\n      if (index <= 7) return true\r\n    })\r\n    setCountryData(firstNineCountries)\r\n\r\n    window.addEventListener('scroll', infiniteScroll)\r\n\r\n    return () => window.removeEventListener('scroll', infiniteScroll)\r\n  }, [])\r\n\r\n  const infiniteScroll = () => {\r\n    const { scrollHeight, scrollTop, clientHeight } = document.documentElement\r\n\r\n    if (scrollTop + clientHeight >= scrollHeight) {\r\n      moreCountries()\r\n    }\r\n  }\r\n\r\n  const handleChange = e => {\r\n    const country = e.target.value.toUpperCase()\r\n\r\n    const arrayCountries = countries.Countries.filter(item => {\r\n      const arrayName = item.Country.split('')\r\n      const arrayNameLength = arrayName.filter((item, index) => {\r\n        if (index + 1 <= country.length) return true\r\n      })\r\n      const countryName = arrayNameLength.join('').toUpperCase()\r\n\r\n      if (country === countryName) return true\r\n    })\r\n\r\n    setCountryData(arrayCountries)\r\n  }\r\n\r\n  const moreCountries = () => {\r\n    if (document.getElementsByTagName('input')[1].value === '') {\r\n      countryCounter += 9\r\n      const nextCountries = data.Countries.filter((item, index) => {\r\n        if (index <= countryCounter) return true\r\n      })\r\n      setCountryData(nextCountries)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HeaderHome />\r\n      <InputContainer>\r\n        <Input\r\n          placeholder=\"Type any country\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n        />\r\n      </InputContainer>\r\n      <Cards>\r\n        {countryData.map(country => (\r\n          <CountryCard key={country.ID} country={country} />\r\n        ))}\r\n      </Cards>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DashBoardHome\r\n","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\components\\Header\\index.jsx",["50"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport Switch from 'react-switch'\r\n\r\nimport { ThemeContext, themes } from '../../context/theme'\r\nimport {\r\n  Container,\r\n  ThemeButton,\r\n  Title,\r\n  Text,\r\n  Strong,\r\n  Data,\r\n  Section,\r\n  SectionTitle,\r\n  Amount\r\n} from './styles'\r\n\r\nconst HeaderHome = () => {\r\n  const [globalData, setGlobalData] = useState()\r\n  const { theme, setTheme } = useContext(ThemeContext)\r\n\r\n  useEffect(async () => {\r\n    setGlobalData(\r\n      await (await fetch('https://api.covid19api.com/summary')).json()\r\n    )\r\n  }, [])\r\n\r\n  const toggleTheme = () => {\r\n    if (theme.name === 'dark') {\r\n      localStorage.setItem('@theme', 'light')\r\n      return themes[1]\r\n    } else {\r\n      localStorage.setItem('@theme', 'dark')\r\n      return themes[0]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Title>\r\n        <Text>Covid-19</Text>\r\n        <Strong>On World</Strong>\r\n      </Title>\r\n      <ThemeButton>\r\n        <Switch\r\n          onChange={() => {\r\n            setTheme(toggleTheme())\r\n          }}\r\n          checked={theme.name === 'dark' ? true : false}\r\n          checkedIcon={false}\r\n          uncheckedIcon={false}\r\n          height={20}\r\n          handleDiameter={10}\r\n          width={40}\r\n        />\r\n      </ThemeButton>\r\n      <Data>\r\n        <Section color=\"D5E14E\">\r\n          <SectionTitle>Confirmed</SectionTitle>\r\n          <Amount>{globalData && globalData.Global.TotalConfirmed}</Amount>\r\n        </Section>\r\n        <Section color=\"FD333F\">\r\n          <SectionTitle>Deaths</SectionTitle>\r\n          <Amount>{globalData && globalData.Global.TotalDeaths}</Amount>\r\n        </Section>\r\n        <Section color=\"4CEA49\">\r\n          <SectionTitle>Recovered</SectionTitle>\r\n          <Amount>{globalData && globalData.Global.TotalRecovered}</Amount>\r\n        </Section>\r\n      </Data>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default HeaderHome\r\n","C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\components\\Header\\styles.js",[],"C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\styles\\dashboard.js",[],"C:\\Users\\rodri\\Documents\\projetos\\covid19-dashboard\\src\\components\\CountryCard\\styles.js",[],{"ruleId":"51","severity":1,"message":"52","line":27,"column":3,"nodeType":"53","endLine":27,"endColumn":12,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":5,"column":1,"nodeType":"57","endLine":5,"endColumn":48,"fix":"58"},{"ruleId":"51","severity":1,"message":"59","line":18,"column":13,"nodeType":"60","endLine":31,"endColumn":4},{"ruleId":"51","severity":1,"message":"61","line":22,"column":12,"nodeType":"62","endLine":22,"endColumn":76},{"ruleId":"51","severity":1,"message":"59","line":21,"column":13,"nodeType":"60","endLine":25,"endColumn":4},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTheme'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.","Identifier",["63"],"import-helpers/order-imports","There should be no empty line within import group","ImportDeclaration",{"range":"64","text":"65"},"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression",{"desc":"66","fix":"67"},[215,217],"","Add dependencies array: []",{"range":"68","text":"69"},[706,706],", []"]