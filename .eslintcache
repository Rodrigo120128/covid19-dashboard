[{"C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\index.js":"1","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\App.js":"2","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\pages\\DashboardHome.js":"3","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\context\\theme.js":"4","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\components\\HeaderHome\\index.js":"5","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\components\\SearchCountries\\index.js":"6","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\components\\CountryCard\\index.js":"7"},{"size":195,"mtime":1608400148437,"results":"8","hashOfConfig":"9"},{"size":472,"mtime":1608401118422,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1608402070194,"results":"11","hashOfConfig":"9"},{"size":962,"mtime":1608403164155,"results":"12","hashOfConfig":"9"},{"size":2273,"mtime":1608403004722,"results":"13","hashOfConfig":"9"},{"size":2198,"mtime":1608403603558,"results":"14","hashOfConfig":"9"},{"size":2116,"mtime":1608402158960,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1b8hw11",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\index.js",[],["35","36"],"C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\App.js",["37"],"import React from \"react\"\nimport './App.css';\nimport DashBoardHome from \"./pages/DashboardHome\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  BrowserRouter\n} from \"react-router-dom\";\nimport {ThemeProvider} from \"./context/theme\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <ThemeProvider>\n          <Route path=\"/\" component={DashBoardHome}/>\n        </ThemeProvider>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\pages\\DashboardHome.js",[],"C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\context\\theme.js",["38"],"import React,{createContext, useEffect, useState} from \"react\"\r\n\r\nconst ThemeContext = createContext()\r\n\r\nconst themes = [\r\n    {\r\n        name:\"dark\",\r\n        colors:{\r\n            background:\"rgb(27,27,29)\",\r\n            backgroundCard:\"rgb(38,43,48)\",\r\n            color:\"white\"\r\n        }\r\n    },\r\n    {\r\n        name:\"light\",\r\n        colors:{\r\n            background:\"rgb(236,233,233)\",\r\n            backgroundCard:\"rgb(248,247,247)\",\r\n            color:\"black\"\r\n        }\r\n    }\r\n]\r\n\r\nconst ThemeProvider = ({children}) => {\r\n    const [theme,setTheme] = useState(themes[0])\r\n\r\n    useEffect(() => {\r\n        if(localStorage.getItem(\"@theme\") === \"dark\") setTheme(themes[0])\r\n        else if(localStorage.getItem(\"@theme\") === \"light\") setTheme(themes[1])\r\n    })\r\n\r\n    return(\r\n        <ThemeContext.Provider value={{theme,setTheme}}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\nexport {ThemeContext,ThemeProvider,themes}\r\n\r\n","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\components\\HeaderHome\\index.js",["39"],"import React, { useEffect, useState ,useContext} from \"react\"\nimport \"./style.css\"\nimport Switch from \"react-switch\"\nimport {ThemeContext,themes} from \"../../context/theme\"\nconst HeaderHome = () => {\n     const [globalData,setGlobalData] = useState()\n     const {theme,setTheme} = useContext(ThemeContext)\n\n    useEffect(async () => {\n        setGlobalData(await (await fetch(\"https://api.covid19api.com/summary\")).json())\n    },[])\n\n    const toggleTheme = () => {\n        if(theme.name === \"dark\"){\n            localStorage.setItem(\"@theme\",\"light\")\n            return themes[1]\n        }else{\n            localStorage.setItem(\"@theme\",\"dark\")\n            return themes[0]\n        }\n    }\n\n    return(\n        <>\n            <div className=\"home-title\">\n                <span style={{color:theme.colors.color}} className=\"title-covid-19\">Covid-19</span>\n                <span style={{color:theme.colors.color}} className=\"title-onWorld\">On World</span>\n                <Switch \n                    onChange={() => {\n                        setTheme(toggleTheme())\n                    }}\n                    checked={theme.name === \"dark\" ? true : false}\n                    checkedIcon={false}\n                    uncheckedIcon={false}\n                    height={20}\n                    handleDiameter={10}\n                    width={40}\n                />\n            </div>\n            <div className=\"home-worldData\">\n                <div className=\"home-worldData-card-confirmed\">\n                    <span style={{fontSize:\"15px\"}}>Confirmed</span>\n                    <span style={{fontSize:\"30px\"}}>{globalData && globalData.Global.TotalConfirmed}</span>\n                </div>\n                <div className=\"home-worldData-card-deaths\">\n                    <span style={{fontSize:\"15px\"}}>Deaths</span>\n                    <span style={{fontSize:\"30px\"}}>{globalData && globalData.Global.TotalDeaths}</span>\n                </div>\n                <div className=\"home-worldData-card-recovered\">\n                    <span style={{fontSize:\"15px\"}}>Recovered</span>\n                    <span style={{fontSize:\"30px\"}}>{globalData && globalData.Global.TotalRecovered}</span>\n                </div>\n            </div> \n        </>\n    )\n}\n\nexport default HeaderHome","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\components\\SearchCountries\\index.js",["40","41","42","43","44","45"],"import React, { useEffect, useState } from \"react\"\nimport \"./style.css\"\nimport CountryCard from \"../CountryCard\"\n\nconst SearchCountries = () => {\n    const [countryData,setCountryData] = useState([])\n    const [countries,setCountries] = useState()\n    let countryCounter = 8\n    let data = \"\"\n\n    useEffect( async () => {\n        setCountries(await (await fetch(\"https://api.covid19api.com/summary\")).json())\n        data = await (await fetch(\"https://api.covid19api.com/summary\")).json()\n        const firstNineCountries = data.Countries.filter((item,index) => {\n            if(index <= 8) return true\n        })\n\n        setCountryData(firstNineCountries)\n\n        window.addEventListener(\"scroll\",infiniteScroll)\n\n        return () => window.removeEventListener(\"scroll\",infiniteScroll)\n    },[])\n\n    const infiniteScroll = () => {\n        const {scrollHeight,scrollTop,clientHeight} = document.documentElement\n\n        if(scrollTop + clientHeight >= scrollHeight){\n            moreCountries()\n        }\n    }\n\n    const handleChange = (e) => {\n        const country = e.target.value.toUpperCase()\n        \n        const arrayCountries = countries.Countries.filter((item) => {\n            const arrayName = item.Country.split(\"\")\n            const arrayNameLength = arrayName.filter((item,index) => {\n                if(index+1 <= country.length) return true\n            })\n            const countryName = arrayNameLength.join(\"\").toUpperCase()\n            \n            if(country === countryName) return true\n        })\n\n        setCountryData(arrayCountries)\n    }\n\n    const moreCountries = ()  => {\n        if(document.getElementsByTagName(\"input\")[1].value  === \"\"){\n            countryCounter+=9\n            const nextCountries = data.Countries.filter((item,index) => {\n                if(index <= countryCounter) return true\n            })\n            setCountryData(nextCountries)\n        }\n    }\n\n    return(\n        <>\n            <div className=\"home-searchCountries\">\n                <input placeholder=\"Type any country\" type=\"text\" onChange={handleChange}/>\n            </div>\n            <CountryCard countries={countryData}/>\n        </>\n    )\n}\n\nexport default SearchCountries","C:\\Users\\rodri\\projetos\\covid19-dashboard\\src\\components\\CountryCard\\index.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":5,"column":20,"nodeType":"52","messageId":"53","endLine":5,"endColumn":26},{"ruleId":"54","severity":1,"message":"55","line":27,"column":5,"nodeType":"52","endLine":27,"endColumn":14,"suggestions":"56"},{"ruleId":"54","severity":1,"message":"57","line":9,"column":15,"nodeType":"58","endLine":11,"endColumn":6},{"ruleId":"54","severity":1,"message":"57","line":11,"column":16,"nodeType":"58","endLine":23,"endColumn":6},{"ruleId":"54","severity":1,"message":"59","line":13,"column":16,"nodeType":"60","endLine":13,"endColumn":80},{"ruleId":"61","severity":1,"message":"62","line":14,"column":71,"nodeType":"58","messageId":"63","endLine":14,"endColumn":73},{"ruleId":"61","severity":1,"message":"62","line":36,"column":66,"nodeType":"58","messageId":"63","endLine":36,"endColumn":68},{"ruleId":"61","severity":1,"message":"62","line":38,"column":67,"nodeType":"58","messageId":"63","endLine":38,"endColumn":69},{"ruleId":"61","severity":1,"message":"62","line":52,"column":70,"nodeType":"58","messageId":"63","endLine":52,"endColumn":72},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTheme'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["66"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","Assignments to the 'data' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","AwaitExpression","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Add dependencies array: []",{"range":"69","text":"70"},[770,770],", []"]